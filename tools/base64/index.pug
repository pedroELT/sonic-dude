html
  head
    link(rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.1/css/bulma.min.css")
    link(rel="stylesheet" href="https://pro.fontawesome.com/releases/v5.10.0/css/all.css")
    meta(charset="utf-8")
    meta(name="viewport" content="width=device-width, initial-scale=1")
    style.
      body {
        padding: 2vw;
      }
  body
    div(class='tile is-ancestor is-vertical')
      div(class='tile is-parent')
        div(class='tile')
          input(type='text' id='decoded' onchange="encode()" placeholder='Decoded' class='input') 
      div(class='tile is-parent')
        div(class='tile')
          div(class='buttons has-addons')
            button(class='button is-info' onclick='encode()') 
              span(class="icon")
                i(class="fas fa-arrow-up")
              span Encode
            button(class='button is-link' onclick='decode()')
              span(class="icon")
                i(class="fas fa-arrow-down")
              span Decode
      div(class='tile is-parent')
        div(class='tile')
          input(type='text' id='encoded' onchange="decode()" placeholder='Encoded' class='input')
      script.
        const decode = () => {
          console.log('decode');
          const encoded = document.getElementById('encoded').value;
          const decoded = document.getElementById('decoded');
          base64({"text": encoded, "action": 'decode'}, decoded);
        };

        const encode = () => {
          console.log('encode');
          const encoded = document.getElementById('encoded');
          const decoded = document.getElementById('decoded').value;
          base64({"text": decoded, "action": 'encode'}, encoded);
        };

        const base64 = (data, resultDiv) => {
          const xhr = new XMLHttpRequest();
          xhr.open("POST", '/base64', true);
          xhr.setRequestHeader("Content-Type", "application/json");
          xhr.onreadystatechange = function() { 
            console.log(xhr.response);
            if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {
              console.log(xhr.response);
              resultDiv.value = xhr.response;
            }
          };
          xhr.send(JSON.stringify(data));
        };

      
        

